
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.example.trabalho6.Evento;
import org.example.trabalho6.Lugar;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Vendas", targetNamespace = "http://server/")
@XmlSeeAlso({
    org.example.trabalho6.ObjectFactory.class,
    server.ObjectFactory.class
})
public interface Vendas {


    /**
     * 
     * @param data
     * @param nome
     * @param local
     * @return
     *     returns java.util.List<org.example.trabalho6.Evento>
     * @throws EventNotFoundException_Exception
     * @throws DatabaseErrorException_Exception
     * @throws DateErrorException_Exception
     */
    @WebMethod
    @WebResult(name = "listaEventos", targetNamespace = "")
    @RequestWrapper(localName = "listaEventos", targetNamespace = "http://server/", className = "server.ListaEventos")
    @ResponseWrapper(localName = "listaEventosResponse", targetNamespace = "http://server/", className = "server.ListaEventosResponse")
    @Action(input = "http://server/Vendas/listaEventosRequest", output = "http://server/Vendas/listaEventosResponse", fault = {
        @FaultAction(className = DatabaseErrorException_Exception.class, value = "http://server/Vendas/listaEventos/Fault/DatabaseErrorException"),
        @FaultAction(className = DateErrorException_Exception.class, value = "http://server/Vendas/listaEventos/Fault/DateErrorException"),
        @FaultAction(className = EventNotFoundException_Exception.class, value = "http://server/Vendas/listaEventos/Fault/EventNotFoundException")
    })
    public List<Evento> listaEventos(
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "local", targetNamespace = "")
        String local,
        @WebParam(name = "data", targetNamespace = "")
        String data)
        throws DatabaseErrorException_Exception, DateErrorException_Exception, EventNotFoundException_Exception
    ;

    /**
     * 
     * @param eventoId
     * @return
     *     returns java.util.List<org.example.trabalho6.Lugar>
     * @throws EventNotFoundException_Exception
     * @throws LugarNotFoundException_Exception
     * @throws DatabaseErrorException_Exception
     */
    @WebMethod
    @WebResult(name = "listaLugares", targetNamespace = "")
    @RequestWrapper(localName = "listaLugares", targetNamespace = "http://server/", className = "server.ListaLugares")
    @ResponseWrapper(localName = "listaLugaresResponse", targetNamespace = "http://server/", className = "server.ListaLugaresResponse")
    @Action(input = "http://server/Vendas/listaLugaresRequest", output = "http://server/Vendas/listaLugaresResponse", fault = {
        @FaultAction(className = DatabaseErrorException_Exception.class, value = "http://server/Vendas/listaLugares/Fault/DatabaseErrorException"),
        @FaultAction(className = EventNotFoundException_Exception.class, value = "http://server/Vendas/listaLugares/Fault/EventNotFoundException"),
        @FaultAction(className = LugarNotFoundException_Exception.class, value = "http://server/Vendas/listaLugares/Fault/LugarNotFoundException")
    })
    public List<Lugar> listaLugares(
        @WebParam(name = "eventoId", targetNamespace = "")
        String eventoId)
        throws DatabaseErrorException_Exception, EventNotFoundException_Exception, LugarNotFoundException_Exception
    ;

}
